% This is a configuration file of rebar3, so that the US-Web application can
% better integrate in the current OTP ecosystem, despite its (more complex,
% probably more flexible) native build based on GNU make.
%
% If the name of this file is 'rebar.config', then it is a generated file,
% otherwise it is a template (located in conf/rebar.config.template), meant to
% be filled by information determined at build time or coming from
% GNUmakevars.inc.
%
% See the Myriad counterpart file (same name) for more explanations.


% Base layout was obtained thanks to: 'rebar3 new app us_web', as US-Web is an
% active OTP application (not a mere library).

% To be taken into account, from the library root, through 'make
%  rebar3-application' or 'make rebar3-release'.


% Settings for the 'default' profile follow.


% Depends on the following applications (Erlang implied):
%
% (note: if changing any information there, run from the root the 'real-clean'
%  make target, at least to force an update of rebar.lock)
%
{deps, [

	{cowboy, {git, "git://github.com/ninenines/cowboy", {tag, "2.8.0"}}},

	% To support the generation of X.509 certificates thanks to LetsEncrypt:
	{leec, {git, "git://github.com/Olivier-Boudeville/Ceylan-LEEC",
						{branch, "master"}}},

	% Uncomment to enable the support for Nitrogen-based websites:
	%{simple_bridge, {git, "git://github.com/nitrogen/simple_bridge",{tag, "v2.1.0"}}},
	%{qdate,         {git, "git://github.com/choptastic/qdate",      {tag, "0.5.0"}}},
	%{nprocreg,      {git, "git://github.com/nitrogen/nprocreg",     {tag, "v0.3.0"}}},
	%{nitrogen_core, {git, "git://github.com/nitrogen/nitrogen_core",{tag, "v2.4.0"}}},
	%{sync,          {git, "git://github.com/rustyio/sync",          {tag, "v0.2.0"}}},
	%{nitro_cache,   {git, "git://github.com/nitrogen/nitro_cache",  {tag, "0.4.0"}}}

	% Our toolbox dependencies:
	{myriad,         {git, "git://github.com/Olivier-Boudeville/Ceylan-Myriad",
						{branch, "master"}}},
	{wooper,         {git, "git://github.com/Olivier-Boudeville/Ceylan-WOOPER",
						{branch, "master"}}},
	{traces,         {git, "git://github.com/Olivier-Boudeville/Ceylan-Traces",
						{branch, "master"}}},
	{us_common,      {git, "git://github.com/Olivier-Boudeville/us-common",
						{branch, "master"}}}

]}.



% Include directories found in INC:
{erl_opts, [ {d,myriad_debug_mode}, {d,wooper_debug_mode}, {d,traces_debug_mode}, {d,us_common_debug_mode}, {d,us_web_debug_mode}, {d,us_web_security,relaxed}, {d,tracing_activated}, debug_info, {debug_info_key,"DEBUG_KEY_FOR_REBAR"}, report_warnings, warn_export_all, warn_export_vars, warn_shadow_vars, warn_obsolete_guards, warn_unused_import, warnings_as_errors, {parse_transform,wooper_parse_transform}, INCS_FOR_REBAR ]}.


% Otherwise spurious, ill-configured compilations will be wrongly attempted by
% rebar3:
%
% (could not set REBAR_PROFILE=$(REBAR_PROFILE))
%
{pre_hooks,  [ {compile, "make -s rebar3-compile-pre-hook"} ]}.
{post_hooks, [ {compile, "make -s rebar3-compile-post-hook"} ]}.

%{pre_hooks,  [ {compile, "make -s rebar3-bulletproof-compile-pre-hook"} ]}.
%{post_hooks, [ {compile, "make -s rebar3-bulletproof-compile-post-hook"} ]}.



% For release generation:
%
% (defaults are for the development mode)
%
% With relx, only direct dependencies need to be listed, and version constraints
% can be used, instead of exact, specific versions.
%
{relx, [

  % Not 'us_web_release', otherwise plenty of paths will be cluttered:
  {release, {us_web, "VERSION_FOR_REBAR"},

	% Listing an application here seems necessary (otherwise its .app file will
	% not be found), however it will also result in its automatic starting with
	% no specified arguments, whereas at least for some (ex: simple_bridge) we
	% need to specify them (ex: which backend to be used).
	%
	% Listing 'us_common' here implies its prerequisites (namely Myriad, WOOPER
	% and Traces) and is needed, otherwise their respective modules will not be
	% in the code path:
	%
	%[ crypto, ranch, simple_cache, qdate, nitrogen_core, cowboy, us_web ] },
	[ crypto, ranch, cowboy, leec, us_common, us_web ] },

	{sys_config, "conf/sys.config"},

	% We need specified VM arguments (notably: long node names wanted):
	{vm_args, "conf/vm.args"},

	{dev_mode, true},
	{include_erts, false},

	{extended_start_script, true},
	{include_src, false}

] }.


{profiles, [

  % Production mode (the default one when used as a dependency):
  {prod, [

	% Like for the default profile, except for:
	%  - removed: {d,myriad_debug_mode}, {d,wooper_debug_mode},
	%      {d,traces_debug_mode}, {d,us_common_debug_mode},
	%      {d,us_web_debug_mode} and {d,tracing_activated}
	%  - added: {d,exec_target_is_production}
	%  - changed: {d,us_web_security,relaxed} became {d,us_web_security,strict}
	%
	{erl_opts, [ {d,exec_target_is_production}, {d,us_web_security,strict}, debug_info, {debug_info_key,"DEBUG_KEY_FOR_REBAR"}, report_warnings, warn_export_all, warn_export_vars, warn_shadow_vars, warn_obsolete_guards, warn_unused_import, warnings_as_errors, {parse_transform,wooper_parse_transform}, INCS_FOR_REBAR ]},

	% For the build makefiles:
	{env, [ { 'REBAR_PROFILE', "prod" } ] },

	{relx, [

	  % Not wanting the release to contain symlinks to applications:
	  {dev_mode, false},

	  % Creating a full target system:
	  %{include_erts, true},

	  % Or sharing a local Erlang environment (then the OTP versions must
	  % precisely match):
	  %
	  {include_erts, false},

	  {extended_start_script, true},
	  {include_src, false}

  ]} ] }

  % No test profile currently needed.

]}.

% No Hex package wanted with this version.